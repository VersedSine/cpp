#ifndef __VSS_GEN__
#define __VSS_GEN__

#include <iostream>
#include <bits/random.h>
#include <vector>
#include <chrono>

class gen_t{
private:
    using ull=unsigned long long;

    std::random_device rnd_seed;
	std::mt19937 rnd{rnd_seed()};
    FILE *p_fout=stdout;

    void _warn(const char *c_str){
        fprintf(stderr,c_str);
    }

public:

    //random

    template<typename _T>
    _T randint(_T l,_T r){
        std::uniform_int_distribution<_T>dist(l,r);
        return dist(rnd);
    }

    //Upper case, lower case and numbers
    char randchar_common(){
        int __p=randint(1,3);
        return __p==1?randint<char>('0','9'):(
            __p==2?randint<char>('A','Z'):
            randint<char>('a','z');
        )
    }

    const std::string& randstring_common(size_t __len){
        std::string res;
        while(__len--) res += randchar_common();
        return res;
    }

    //IO

    void setoutput(FILE *p_f){
        p_fout = p_f;
    }
    void setoutput(const char *filename,const char *openmode="w"){
        p_fout = fopen(filename,openmode);
    }

    //vector

    //生成长度为num、每个元素在[from,to]之中的数列
    template<typename _T>
    std::vector<_T> creat_vector(_T from,_T to,ull num,const char *output_format="%lld "){
        std::vector<_T>res;
        for(int i=0;i<num;i++){
            res.push_back(randint(from,to));
            std::fprintf(p_fout,output_format,res.back());
        }
        return res;
    }

    //Graph

    enum type_of_graph_t{
        loop=1,             //自环
        multiple_edge=2,    //重边
        cycle=4             //环
    }type_of_graph;

    enum type_of_special_graph_t{
        none=0,
        chain=1,            //链
        star=2,             //星图/菊花图
        tree=3              //树
    }type_of_special_graph;

    template<typename _Kind,typename _T>
    std::vector<std::pair<_T,_T>> create_graph(_Kind kind,ull point_num,ull edge_num,type_of_special_graph_t special_kind){
        std::vector<std::pair<_T,_T>>res;
        if(special_kind==0){

        }else if(special_kind==1){
            
        }else if(special_kind==2){
            ull center=randint(1,point_num);
            for(ull i=1;i<=edge_num;i++) //TODO sth
        }else if(special_kind==3){

        }else _warn("PARAMETER_ERROR:\nParameter special_kind is illegal");
        
        //fprintf(p_fout,"1");
        //TODO sth

        return {};
    }
    

};

#endif